#script to create pythia8_conf.py
import subprocess,sys,os

def run_command(command):    
    p = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    return iter(p.stdout.readline, b'')

neutrinos=['12','14','16','-12','-14','-16']
inclusive=['True','c','b']

f = open(os.environ["FAIRSHIP"]+'/python/pythia8_conf.py','w')

f.write("# DO NOT EDIT THIS FILE.\n")
f.write("# IT IS AUTOMATICALLY CREATED RUNNING python $FAIRSHIP/macro/makePythia8_conf.py\n")
f.write("import ROOT, os\n")
f.write("import shipunit as u\n")
f.write("import hnl\n")
f.write("import readDecayTable\n")
f.write("\n")
f.write("def addHNLtoROOT(pid=9900015 ,m = 1.0, g=3.654203020370371E-21):\n")
f.write("    pdg = ROOT.TDatabasePDG.Instance()\n")
f.write("    pdg.AddParticle('N2','HNL', m, False, g, 0., 'N2', pid)\n")
f.write("\n")
f.write("def configure(P8gen, mass, couplings, inclusive, deepCopy=False):\n")
f.write("    # configure pythia8 for Ship usage\n")
f.write("    P8gen.UseRandom3() # TRandom1 or TRandom3 ?\n")
f.write("    P8gen.SetMom(400)  # beam momentum in GeV \n")
f.write("    if deepCopy: P8gen.UseDeepCopy()\n")
f.write("    pdg = ROOT.TDatabasePDG.Instance()\n")
f.write("    # pythia stuff not known to ROOT\n")
f.write("    pdg.AddParticle('system','system', 0., False, 0., 0., 'XXX', 90)\n")
f.write("    pdg.AddParticle('p_diffr+','p_diffr+', 0., False, 0., 0., 'XXX', 9902210)\n")
f.write("    # let strange particle decay in Geant4\n")
f.write("    ## the following does not work because need to have N2 decaying\n")
f.write('    #P8gen.SetParameters("ParticleDecays:limitTau0 = on")\n')
f.write('    #P8gen.SetParameters("ParticleDecays:tau0Max = 1")\n')
f.write("    # explicitly make KS and KL stable\n")
f.write('    P8gen.SetParameters("130:mayDecay  = off")\n')
f.write('    P8gen.SetParameters("310:mayDecay  = off")\n')
f.write('    P8gen.SetParameters("3122:mayDecay = off")\n')



for runtype in inclusive:
   if runtype=='True':
      f.write('    if inclusive==\"True\":\n')
      f.write('        P8gen.SetParameters("SoftQCD:inelastic = on")\n')
      f.write('        P8gen.SetParameters("PhotonCollision:gmgm2mumu = on")\n')
      f.write('        P8gen.SetParameters("PromptPhoton:all = on")\n')
      f.write('        P8gen.SetParameters("WeakBosonExchange:all = on")\n')
      continue
   elif runtype=='b':
      f.write('    if inclusive==\"b\":\n') 
      f.write('        P8gen.SetParameters("HardQCD::hardbbbar  = on")\n')
      f.write('        # P8gen.SetParameters("PDF:hardLHAPDFset = cteq5l.LHgrid")\n')
      f.write('        # P8gen.SetParameters("BeamRemnants:primordialKThard = 1.0")\n')
      f.write('        # add HNL\n')
      f.write('        #ctau = 5.4E+06 # for tests use 5.4E+03  # nominal ctau = 54 km = 5.4E+06 cm = 5.4E+07 mm\n')
      f.write('        #mass = 1.0 # GeV\n')
      f.write('        hnl_instance = hnl.HNL(mass, couplings, debug=True)\n')
      f.write('        ctau = hnl_instance.computeNLifetime(system="FairShip") * u.c_light * u.cm\n')
      f.write('        P8gen.SetParameters("9900015:new = N2 N2 2 0 0 "+str(mass)+" 0.0 0.0 0.0 "+str(ctau/u.mm)+"  0   1   0   1   0") \n') 
      f.write('        P8gen.SetParameters("9900015:isResonance = false")\n')
      f.write('        # Configuring decay modes...\n')
      f.write("        readDecayTable.addHNLdecayChannels(P8gen, hnl_instance, conffile=os.path.expandvars('$FAIRSHIP/python/DecaySelection.conf'), verbose=True)\n")
      f.write('        # Finish HNL setup...\n')
      f.write('        P8gen.SetParameters("9900015:mayDecay = on")\n')
      f.write('        P8gen.SetHNLId(9900015)\n')
      f.write('        # also add to PDG\n')
      f.write('        gamma = u.hbarc / float(ctau) #197.3269631e-16 / float(ctau) # hbar*c = 197 MeV*fm = 197e-16 GeV*cm\n')
      f.write('        addHNLtoROOT(pid=9900015,m=mass,g=gamma)\n')
      f.write('        # 12 14 16 neutrinos replace with N2\n')   
      mesons={5122:"Lambda_b0        Lambda_bbar0",511:"B0  Bbar0",521:"B+               B-",531:"B_s0             B_sbar0",\
               541:"B_c+             B_c-"        ,5232:"Xi_b0  Xi_b0_bar",5132:"Xi_b- Xi_b+"}
   else:  
      f.write('    if inclusive==\"c\":\n')  
      f.write('        P8gen.SetParameters("HardQCD::hardccbar  = on")\n')
      f.write('        # add HNL\n')
      f.write('        #ctau = 5.4E+06 # for tests use 5.4E+03  # nominal ctau = 54 km = 5.4E+06 cm = 5.4E+07 mm\n')
      f.write('        #mass = 1.0 # GeV\n')
      f.write('        hnl_instance = hnl.HNL(mass, couplings, debug=True)\n')
      f.write('        ctau = hnl_instance.computeNLifetime(system="FairShip") * u.c_light * u.cm\n')
      f.write('        P8gen.SetParameters("9900015:new = N2 N2 2 0 0 "+str(mass)+" 0.0 0.0 0.0 "+str(ctau/u.mm)+"  0   1   0   1   0") \n') 
      f.write('        P8gen.SetParameters("9900015:isResonance = false")\n')
      f.write('        # Configuring decay modes...\n')
      f.write("        readDecayTable.addHNLdecayChannels(P8gen, hnl_instance, conffile=os.path.expandvars('$FAIRSHIP/python/DecaySelection.conf'), verbose=True)\n")
      f.write('        # Finish HNL setup...\n')
      f.write('        P8gen.SetParameters("9900015:mayDecay = on")\n')
      f.write('        P8gen.SetHNLId(9900015)\n')
      f.write('        # also add to PDG\n')
      f.write('        gamma = u.hbarc / float(ctau) #197.3269631e-16 / float(ctau) # hbar*c = 197 MeV*fm = 197e-16 GeV*cm\n')
      f.write('        addHNLtoROOT(pid=9900015,m=mass,g=gamma)\n')
      f.write('        # 12 14 16 neutrinos replace with N2\n')  
      mesons={4122:"Lambda_c+   Lambda_cbar-",4132:"Xi_c0            Xi_cbar0",431:"D_s+  D_s-",411:"D+ D-",421:"D0  Dbar0",15:"tau-  tau+"}

   for key in mesons:
      commandstring='python '+os.environ["FAIRSHIP"]+'/python/PythiaList.py '+str(key)
      command=commandstring.split()
      for line in run_command(command):
         i=-1
         for item in line.split():

            i+=1	   
            if item == mesons[key].split()[0]:
	       f.write("        #overwrite "+item+" decays\n")
               spinType = line.split()[3]
               chargeType = line.split()[4]
               colType = line.split()[5]
               mass = line.split()[6]
               ctau = line.split()[10]

               f.write('        P8gen.SetParameters(\"'+str(key)+':new  '+mesons[key]+'    '+spinType+'   '+chargeType+'   '+colType+'    '+mass+'    0.00000    0.00000    0.00000  '+ctau+'   0   1   0   1   0\")\n')            
            if item in neutrinos and i!=2 and i!=0 and i!=3: 
                    line=line.replace(' '+item+' ',' 9900015 ')
                    line=line.rstrip()
                    line=line.lstrip()
                    line=line.split(" ",1)[1]
                    f.write('        P8gen.SetParameters(\"'+str(key)+':addChannel  '+line+'\")\n')

   f.write("        P8gen.List(9900015)\n")
f.close()                 
